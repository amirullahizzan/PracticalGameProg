
----------------------------------------------------------------------
ゲームプログラム応用　課題　スクリーンショットや画像の保存
----------------------------------------------------------------------

提出期限：１時間後（できているところまでの提出で構いません、そのあと解説していきます）
提出場所：teams->ゲームプログラム応用->授業（本日）->ファイル->提出

プロジェクトフォルダの名前を【 プロジェクト名_番号_自分の名前 】のように変更して提出してください。
（例えば【 ゲームプログラム応用_課題00_00000000_○○○○○ 】みたいな感じで）


以下の変更を実装することで【 こういう感じで.exe 】のような挙動になるようにしてください。


課題：いろんなカメラでスクリーンショット

	現状のプロジェクトでは、スペースキーを押すことで
	通常カメラと同じものでスクリーンショットを１枚作成しています。

	今回の課題では、そんなスクリーンショットを同時に３枚作成します。
	（スクリーンショット用のレンダーターゲットを３つ用意します）

	一応 Game.cpp の上の方にスクリーンショットの枚数用の定数を用意しています。

	//	スクリーンショットの枚数
	#define SHOT_MAX	3

	「こういう感じで.exe」では、３枚のそれぞれのカメラを以下のようにしています。

	１枚目：現状のカメラ（サンプルと同じそのままのカメラ）
	２枚目：ＮＰＣ側からプレイヤーを見るカメラ
	３枚目：プレイヤーを近くから見るカメラ

		３枚目のカメラはプレイヤーモデルの "mixamorig:Neck" という名前の場所を「見る座標」にしています。
		その場所を取得するのに以下の関数を使っています。

		MV1SearchFrame		：名前からフレーム番号を取得する関数
		MV1GetFramePosition	：フレーム番号の座標を取得する関数

		「カメラ座標」は「見る座標」から少し離れた場所にしています。


	そして、その３枚の画像を画面下の方に並べます。

	ちなみに、スクリーンショット画像のサイズは Game.cpp の上の方に以下のように宣言しています。

	#define SHOT_W	240
	#define SHOT_H	135


各処理に関して、既に宣言してある変数や関数だけでは処理が実装できない場合、
各自で変数や関数を追加した上で実装をおこなってください。
座標や色・スピードなど細かい数値の指定は特にないので、各自でいい感じの数値を設定することで
【 こういう感じで.exe 】のような動きになるように実装してください。


----------------------------------------------------------------------
発展課題
----------------------------------------------------------------------

課題で作成した３枚の画像をクリックすることでその画像を保存します。

	サンプルで使った「 SaveDrawScreen 」を使っても実装できますし、
	「 SaveDrawValidGraph 」を使っても実装できます。

	//	画像番号の絵を新たな画像として保存
	SaveDrawValidGraph( 画像番号, 左, 上, 右, 下, 保存するファイル名 );

	今回のプロジェクトの Hit.cpp に以下の２Ｄ用の関数も追加しています。

	//	点（マウス座標）と四角（画像の座標と大きさで）の当たり判定（全て Float2 を渡します）
	if( CheckPointBoxHit( マウス座標, 画像座標, 画像の大きさ ) ){
	}


