
----------------------------------------------------------------------
ゲームプログラム応用　課題　アニメーションの制御
----------------------------------------------------------------------

提出期限：１時間後（できているところまでの提出で構いません、そのあと解説していきます）
提出場所：teams->ゲームプログラム応用->授業（本日）->ファイル->提出

プロジェクトフォルダの名前を【 プロジェクト名_番号_自分の名前 】のように変更して提出してください。
（例えば【 ゲームプログラム応用_課題00_00000000_○○○○○ 】みたいな感じで）


以下の変更を実装することで【 こういう感じで.exe 】のような挙動になるようにしてください。


課題：スペースキーで固定カメラと自分視点でのカメラ切り替え

	自分視点はプレイヤーの頭の座標から正面方向を見るカメラなので、
	目の位置の座標が必要です。
	（「こういう感じで.exe」では、「 mixamorig:Head 」というフレーム名から行列を取得して使っています）

	カメラ座標：頭の座標
	見る座標　：Ｚ方向のベクトルを頭の行列で変換した座標


各処理に関して、既に宣言してある変数や関数だけでは処理が実装できない場合、
各自で変数や関数を追加した上で実装をおこなってください。
座標や色・スピードなど細かい数値の指定は特にないので、各自でいい感じの数値を設定することで
【 こういう感じで.exe 】のような動きになるように実装してください。

----------------------------------------------------------------------
発展課題
----------------------------------------------------------------------

プレイヤーが棒を持っているような感じで右手から線の描画

	線の描画をするためには、２点の座標が必要です。

	１点目：サンプルで実装した球の座標
	２点目：線のの先の座標

	ちなみに「課題内容.png」で右手フレームの箇所を表示しています。
	（それぞれの軸の色は「Ｘ軸：赤」「Ｙ軸：緑」「Ｚ軸：青」です）

----------------------------------------------------------------------
発展課題２
----------------------------------------------------------------------

発展課題で描画した線を残像みたいな描画にします

	そのためには線の開始座標とゴール座標を記録しておく用の変数が必要です。

	↓例えばこんな感じで
	//	「こういう感じで（発展２）.exe」では記録座標は１０個にしています
	#define RECORD_MAX 10
	//	線の開始座標
	Float3 record_pos[RECORD_MAX];
	//	線のゴール座標
	Float3 record_goal[RECORD_MAX];

	この変数に毎フレーム座標を記録していき（記録領域をずらしながら）
	この記録座標を使って線の描画をするときに
	透明度も落としていきながら描画していきます。

