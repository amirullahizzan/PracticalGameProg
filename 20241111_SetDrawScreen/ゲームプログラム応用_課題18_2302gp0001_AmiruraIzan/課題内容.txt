
----------------------------------------------------------------------
ゲームプログラム応用　課題　２画面
----------------------------------------------------------------------

提出期限：１時間後（できているところまでの提出で構いません、そのあと解説していきます）
提出場所：teams->ゲームプログラム応用->授業（本日）->ファイル->提出

プロジェクトフォルダの名前を【 プロジェクト名_番号_自分の名前 】のように変更して提出してください。
（例えば【 ゲームプログラム応用_課題00_00000000_○○○○○ 】みたいな感じで）


以下の変更を実装することで【 こういう感じで.exe 】のような挙動になるようにしてください。


課題１：小さい画面のカメラをプレイヤーを見るカメラにする

	現状のプロジェクトでは小さい画面のカメラはサンプルのまま適当な値の固定カメラになっています。

	そのカメラ座標をプレイヤーを見るカメラに変更します。
	レンダーターゲットをテクスチャにしているときのカメラをプレイヤーを見るカメラにすることで、
	通常画面では全体を描画して、小さい画面ではプレイヤーのアップが表示されるようになります。


課題２：プレイヤーの座標移動に合わせて小さい画面の場所も変更してみる

	課題１で出来上がった小さい画面を、プレイヤーの画面位置（左か右）によって表示場所を変更します。
	（ ConvWorldPosToScreenPos を使って取得した画面座標で判定すると実装しやすいと思います）


各処理に関して、既に宣言してある変数や関数だけでは処理が実装できない場合、
各自で変数や関数を追加した上で実装をおこなってください。
座標や色・スピードなど細かい数値の指定は特にないので、各自でいい感じの数値を設定することで
【 こういう感じで.exe 】のような動きになるように実装してください。

----------------------------------------------------------------------
発展課題
----------------------------------------------------------------------

小さい画面の座標変更を画面の外に行く様に移動させる


文字列を描画するだけの別画面を画像にして描画

	もうひとつ別描画画像を用意して、
	黒っぽい背景四角と文字列の描画だけをおこなったものをその画像に書き込みます。
	（文字列はスクロ−ルさせます）

	//	四角の描画関数
	DrawFillBox( x1, y1, x2, y2, 色 );

	「こういう感じで（発展２）.exe」では、以下のような定数や文字列を使っています。
	（使ってもいいし使わなくてもいいし）

	//	文字列描画画面サイズ
	#define TEXT_SCREEN_W	400
	#define TEXT_SCREEN_H	50

	//	描画する文字列
	const char *sample_text = "文字列と四角を描画するだけの別画面を画像にして画面下に描画";

	他にも「別画面の画像用の変数」や「文字列を移動させるための座標用の変数」は必要です。

	この画面描画は２Ｄのみなので「こういう感じで（発展２）.exe」では、この画面でのカメラ設定はしていません。
