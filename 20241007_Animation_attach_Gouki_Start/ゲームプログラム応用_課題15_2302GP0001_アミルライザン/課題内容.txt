
----------------------------------------------------------------------
ゲームプログラム応用　課題　アニメーションの切り替え
----------------------------------------------------------------------

提出期限：１時間後（できているところまでの提出で構いません、そのあと解説していきます）
提出場所：teams->ゲームプログラム応用->授業（本日）->ファイル->提出

プロジェクトフォルダの名前を【 プロジェクト名_番号_自分の名前 】のように変更して提出してください。
（例えば【 ゲームプログラム応用_課題00_00000000_○○○○○ 】みたいな感じで）


以下の変更を実装することで【 こういう感じで.exe 】のような挙動になるようにしてください。


課題：アニメーションの切り替え（ Game.cpp ）

	現状のプレイヤーは、移動してないときは立ちアニメーション（ anim_stand.mv1 ）を
	上キーを押しているときは歩きアニメーション（ anim_walk.mv1 ）を再生しています。

	今回のプロジェクトでは data\player フォルダの中に新たに
	走りアニメーション（ anim_run.mv1 ）を追加しています。

	そして、プレイヤーとＮＰＣの距離が一定の範囲内（ RUN_DISTANCE ）の時は
	移動スピードを速くして走りアニメーションをするようにします。
	（一応、走る移動スピード用の定数 PLAYER_RUN_SPEED を定義しています）

	↓これ
	//	プレイヤーとＮＰＣの距離がこれより短かったら走り始める
	#define RUN_DISTANCE		5.0f
	//	走っているときの移動スピード
	#define PLAYER_RUN_SPEED	0.055f

	//	２つの座標の距離を求める関数
	距離 = GetFloat3Distance( 座標１, 座標２ );
	//	この距離が RUN_DISTANCE より短かったら走る


各処理に関して、既に宣言してある変数や関数だけでは処理が実装できない場合、
各自で変数や関数を追加した上で実装をおこなってください。
座標や色・スピードなど細かい数値の指定は特にないので、各自でいい感じの数値を設定することで
【 こういう感じで.exe 】のような動きになるように実装してください。


----------------------------------------------------------------------
発展課題
----------------------------------------------------------------------

ＮＰＣに近づいたら（プレイヤーの青円とＮＰＣの赤円が当たったら）

	発展課題で使うための半径用の定数は用意しています
	↓これ
	//	プレイヤーとＮＰＣの範囲用の半径（発展課題で使います）
	#define CHARA_RADIUS		0.75f

	//	ＸＺ方向に円の描画
	DrawCircle3D_XZ( 座標, CHARA_RADIUS, 色 );


	プレイヤーはＮＰＣにめり込まない

		プレイヤーとＮＰＣの距離を求めて、２つの円の半径の長さよりも短かったら
		その長さ分、ＮＰＣからプレイヤーの方向にプレイヤーの座標を移動させます。


	ＮＰＣを押しているという感じで歩きアニメーションにする

		その時は走りアニメーションではなく、押している感じを出すために歩きアニメーションにします。
